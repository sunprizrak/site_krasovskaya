version: '3.9'

services:
    web:
        build:
            context: .
            dockerfile: Dockerfile.prod
        command: gunicorn web.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/home/web/web/static
            - media_volume:/home/web/web/media
        expose:
            - "8000"
        stdin_open: true
        tty: true
        env_file:
            - ./.env.prod
        restart: always
        depends_on:
            - db
    db:
        image: postgres:16.2-alpine3.18
        stdin_open: true
        tty: true
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            -   ./.env.prod
        restart: always
        expose:
            - "5432"
    nginx:
        build:
            context: ./nginx
        volumes:
            - static_volume:/home/web/web/static
            - media_volume:/home/web/web/media
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        ports:
            - "80:80"
            - "443:443"
        stdin_open: true
        tty: true
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        restart: always
        depends_on:
            - web
    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        stdin_open: true
        tty: true
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    redis:
        image: redis:7.2.5-alpine
        hostname: redis
        restart: always
    celery:
        build:
            context: .
        hostname: celery
        env_file: ./.env.prod
        command: celery -A web worker --loglevel=error
        volumes:
            - .:/usr/src/web
        restart: always
        links:
            - redis
        depends_on:
            - redis
            - db
    celery-beat:
        build:
            context: .
        command: celery -A web beat -l info
        volumes:
            - .:/usr/src/web
        env_file:
            - ./.env.prod
        restart: always
        depends_on:
            - redis
            - db
    flower:
        build:
            context: .
        hostname: flower
        env_file:
            - ./.env.prod
        command: celery -A web flower
        volumes:
            - .:/usr/src/web
        links:
            - redis
        restart: always
        depends_on:
            - redis
            - celery
            - db
        ports:
            -   '5555:5555'
volumes:
    postgres_data:
    static_volume:
    media_volume: